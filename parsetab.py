
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS COLON COMMA COUNT CREATE CURRENT DATABASE DIVIDE DROP EQ EQUALS EXIT FCONST FLOAT FROM GE GT ICONST ID INT LE LIST LOAD LPAREN LT MAX MINUS MOD NE NOT OR PLUS QUIT RPAREN SCHEMA SCONST SELECT SEMI STR SUM TABLE TIMES USE WHEREall : create\n           | use\n           | load\n           | drop\n           | select\n           | cdb\n           | schema\n           | dblist\n           | exitcreate : CREATE DATABASE ID SEMIdblist : LIST DATABASE SEMIcdb : CURRENT DATABASE SEMIschema : SCHEMA DATABASE ID SEMI\n              | SCHEMA CURRENT DATABASE SEMI\n              | SCHEMA TABLE ID SEMIuse : USE ID SEMIload : LOAD ID AS ID LPAREN column_dtypes RPAREN SEMIcolumn_dtypes : column_dtypes COMMA column_dtype\n                     | column_dtypecolumn_dtype : ID COLON dtypedtype : INT\n             | FLOAT\n             | STRdrop : DROP DATABASE ID SEMI\n            | DROP TABLE ID SEMIselect : SELECT columns FROM ID WHERE logical_not_expression SEMIcolumns : columns COMMA column\n               | columncolumn  : MAX LPAREN ID RPAREN\n               | COUNT LPAREN ID RPAREN\n               | SUM LPAREN ID RPAREN\n               | ID\n               | MAX LPAREN ID RPAREN AS ID\n               | COUNT LPAREN ID RPAREN AS ID\n               | SUM LPAREN ID RPAREN AS ID\n               | ID AS IDlogical_not_expression : logical_or_expressionlogical_not_expression : NOT logical_not_expressionlogical_or_expression : logical_and_expressionlogical_or_expression : logical_or_expression OR logical_and_expressionlogical_and_expression : equality_expressionlogical_and_expression : logical_and_expression AND equality_expressionequality_expression : relational_expressionequality_expression : equality_expression EQ relational_expression\n                           | equality_expression EQUALS relational_expressionequality_expression : equality_expression NE relational_expressionrelational_expression : additive_expressionrelational_expression : relational_expression LT additive_expressionrelational_expression : relational_expression GT additive_expressionrelational_expression : relational_expression LE additive_expressionrelational_expression : relational_expression GE additive_expressionadditive_expression : multiplicative_expressionadditive_expression : additive_expression PLUS multiplicative_expressionadditive_expression : additive_expression MINUS multiplicative_expressionmultiplicative_expression : valmultiplicative_expression : multiplicative_expression TIMES valmultiplicative_expression : multiplicative_expression DIVIDE valmultiplicative_expression : multiplicative_expression MOD valval : ID\n           | ICONST\n           | FCONST\n           | SCONSTexit : EXIT LPAREN RPAREN\n            | QUIT LPAREN RPAREN\n            | EXIT LPAREN RPAREN SEMI\n            | QUIT LPAREN RPAREN SEMI'
    
_lr_action_items = {'CREATE':([0,],[11,]),'USE':([0,],[12,]),'LOAD':([0,],[13,]),'DROP':([0,],[14,]),'SELECT':([0,],[15,]),'CURRENT':([0,17,],[16,34,]),'SCHEMA':([0,],[17,]),'LIST':([0,],[18,]),'EXIT':([0,],[19,]),'QUIT':([0,],[20,]),'$end':([1,2,3,4,5,6,7,8,9,10,40,50,54,55,56,57,59,60,67,68,69,70,71,99,122,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-16,-12,-11,-63,-64,-10,-24,-25,-13,-14,-15,-65,-66,-26,-17,]),'DATABASE':([11,14,16,17,18,34,],[21,24,32,33,36,52,]),'ID':([12,13,15,21,24,25,33,35,41,44,45,46,47,48,49,72,73,83,93,94,95,98,100,102,103,104,105,106,107,108,109,110,111,112,113,114,],[22,23,27,39,42,43,51,53,58,61,27,63,64,65,66,77,80,80,115,116,117,77,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'TABLE':([14,17,],[25,35,]),'MAX':([15,45,],[29,29,]),'COUNT':([15,45,],[30,30,]),'SUM':([15,45,],[31,31,]),'LPAREN':([19,20,29,30,31,58,],[37,38,47,48,49,72,]),'SEMI':([22,32,36,39,42,43,51,52,53,55,56,80,81,82,84,85,86,87,88,89,90,91,92,97,101,124,125,126,127,128,129,130,131,132,133,134,135,136,137,],[40,50,54,57,59,60,67,68,69,70,71,-59,99,-37,-39,-41,-43,-47,-52,-55,-60,-61,-62,122,-38,-40,-42,-44,-45,-46,-48,-49,-50,-51,-53,-54,-56,-57,-58,]),'AS':([23,27,74,75,76,],[41,46,93,94,95,]),'FROM':([26,27,28,62,63,74,75,76,115,116,117,],[44,-32,-28,-27,-36,-29,-30,-31,-33,-34,-35,]),'COMMA':([26,27,28,62,63,74,75,76,78,79,115,116,117,118,119,120,121,123,],[45,-32,-28,-27,-36,-29,-30,-31,98,-19,-33,-34,-35,-20,-21,-22,-23,-18,]),'RPAREN':([37,38,64,65,66,78,79,118,119,120,121,123,],[55,56,74,75,76,97,-19,-20,-21,-22,-23,-18,]),'WHERE':([61,],[73,]),'NOT':([73,83,],[83,83,]),'ICONST':([73,83,100,102,103,104,105,106,107,108,109,110,111,112,113,114,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'FCONST':([73,83,100,102,103,104,105,106,107,108,109,110,111,112,113,114,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'SCONST':([73,83,100,102,103,104,105,106,107,108,109,110,111,112,113,114,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'COLON':([77,],[96,]),'TIMES':([80,88,89,90,91,92,133,134,135,136,137,],[-59,112,-55,-60,-61,-62,112,112,-56,-57,-58,]),'DIVIDE':([80,88,89,90,91,92,133,134,135,136,137,],[-59,113,-55,-60,-61,-62,113,113,-56,-57,-58,]),'MOD':([80,88,89,90,91,92,133,134,135,136,137,],[-59,114,-55,-60,-61,-62,114,114,-56,-57,-58,]),'PLUS':([80,87,88,89,90,91,92,129,130,131,132,133,134,135,136,137,],[-59,110,-52,-55,-60,-61,-62,110,110,110,110,-53,-54,-56,-57,-58,]),'MINUS':([80,87,88,89,90,91,92,129,130,131,132,133,134,135,136,137,],[-59,111,-52,-55,-60,-61,-62,111,111,111,111,-53,-54,-56,-57,-58,]),'LT':([80,86,87,88,89,90,91,92,126,127,128,129,130,131,132,133,134,135,136,137,],[-59,106,-47,-52,-55,-60,-61,-62,106,106,106,-48,-49,-50,-51,-53,-54,-56,-57,-58,]),'GT':([80,86,87,88,89,90,91,92,126,127,128,129,130,131,132,133,134,135,136,137,],[-59,107,-47,-52,-55,-60,-61,-62,107,107,107,-48,-49,-50,-51,-53,-54,-56,-57,-58,]),'LE':([80,86,87,88,89,90,91,92,126,127,128,129,130,131,132,133,134,135,136,137,],[-59,108,-47,-52,-55,-60,-61,-62,108,108,108,-48,-49,-50,-51,-53,-54,-56,-57,-58,]),'GE':([80,86,87,88,89,90,91,92,126,127,128,129,130,131,132,133,134,135,136,137,],[-59,109,-47,-52,-55,-60,-61,-62,109,109,109,-48,-49,-50,-51,-53,-54,-56,-57,-58,]),'EQ':([80,85,86,87,88,89,90,91,92,125,126,127,128,129,130,131,132,133,134,135,136,137,],[-59,103,-43,-47,-52,-55,-60,-61,-62,103,-44,-45,-46,-48,-49,-50,-51,-53,-54,-56,-57,-58,]),'EQUALS':([80,85,86,87,88,89,90,91,92,125,126,127,128,129,130,131,132,133,134,135,136,137,],[-59,104,-43,-47,-52,-55,-60,-61,-62,104,-44,-45,-46,-48,-49,-50,-51,-53,-54,-56,-57,-58,]),'NE':([80,85,86,87,88,89,90,91,92,125,126,127,128,129,130,131,132,133,134,135,136,137,],[-59,105,-43,-47,-52,-55,-60,-61,-62,105,-44,-45,-46,-48,-49,-50,-51,-53,-54,-56,-57,-58,]),'AND':([80,84,85,86,87,88,89,90,91,92,124,125,126,127,128,129,130,131,132,133,134,135,136,137,],[-59,102,-41,-43,-47,-52,-55,-60,-61,-62,102,-42,-44,-45,-46,-48,-49,-50,-51,-53,-54,-56,-57,-58,]),'OR':([80,82,84,85,86,87,88,89,90,91,92,124,125,126,127,128,129,130,131,132,133,134,135,136,137,],[-59,100,-39,-41,-43,-47,-52,-55,-60,-61,-62,-40,-42,-44,-45,-46,-48,-49,-50,-51,-53,-54,-56,-57,-58,]),'INT':([96,],[119,]),'FLOAT':([96,],[120,]),'STR':([96,],[121,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'all':([0,],[1,]),'create':([0,],[2,]),'use':([0,],[3,]),'load':([0,],[4,]),'drop':([0,],[5,]),'select':([0,],[6,]),'cdb':([0,],[7,]),'schema':([0,],[8,]),'dblist':([0,],[9,]),'exit':([0,],[10,]),'columns':([15,],[26,]),'column':([15,45,],[28,62,]),'column_dtypes':([72,],[78,]),'column_dtype':([72,98,],[79,123,]),'logical_not_expression':([73,83,],[81,101,]),'logical_or_expression':([73,83,],[82,82,]),'logical_and_expression':([73,83,100,],[84,84,124,]),'equality_expression':([73,83,100,102,],[85,85,85,125,]),'relational_expression':([73,83,100,102,103,104,105,],[86,86,86,86,126,127,128,]),'additive_expression':([73,83,100,102,103,104,105,106,107,108,109,],[87,87,87,87,87,87,87,129,130,131,132,]),'multiplicative_expression':([73,83,100,102,103,104,105,106,107,108,109,110,111,],[88,88,88,88,88,88,88,88,88,88,88,133,134,]),'val':([73,83,100,102,103,104,105,106,107,108,109,110,111,112,113,114,],[89,89,89,89,89,89,89,89,89,89,89,89,89,135,136,137,]),'dtype':([96,],[118,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> all","S'",1,None,None,None),
  ('all -> create','all',1,'p_all','parser.py',9),
  ('all -> use','all',1,'p_all','parser.py',10),
  ('all -> load','all',1,'p_all','parser.py',11),
  ('all -> drop','all',1,'p_all','parser.py',12),
  ('all -> select','all',1,'p_all','parser.py',13),
  ('all -> cdb','all',1,'p_all','parser.py',14),
  ('all -> schema','all',1,'p_all','parser.py',15),
  ('all -> dblist','all',1,'p_all','parser.py',16),
  ('all -> exit','all',1,'p_all','parser.py',17),
  ('create -> CREATE DATABASE ID SEMI','create',4,'p_create','parser.py',20),
  ('dblist -> LIST DATABASE SEMI','dblist',3,'p_dblist','parser.py',33),
  ('cdb -> CURRENT DATABASE SEMI','cdb',3,'p_cdb','parser.py',41),
  ('schema -> SCHEMA DATABASE ID SEMI','schema',4,'p_schema','parser.py',49),
  ('schema -> SCHEMA CURRENT DATABASE SEMI','schema',4,'p_schema','parser.py',50),
  ('schema -> SCHEMA TABLE ID SEMI','schema',4,'p_schema','parser.py',51),
  ('use -> USE ID SEMI','use',3,'p_use','parser.py',124),
  ('load -> LOAD ID AS ID LPAREN column_dtypes RPAREN SEMI','load',8,'p_load','parser.py',145),
  ('column_dtypes -> column_dtypes COMMA column_dtype','column_dtypes',3,'p_column_dtypes','parser.py',177),
  ('column_dtypes -> column_dtype','column_dtypes',1,'p_column_dtypes','parser.py',178),
  ('column_dtype -> ID COLON dtype','column_dtype',3,'p_column_dtype','parser.py',191),
  ('dtype -> INT','dtype',1,'p_dtype','parser.py',195),
  ('dtype -> FLOAT','dtype',1,'p_dtype','parser.py',196),
  ('dtype -> STR','dtype',1,'p_dtype','parser.py',197),
  ('drop -> DROP DATABASE ID SEMI','drop',4,'p_drop','parser.py',201),
  ('drop -> DROP TABLE ID SEMI','drop',4,'p_drop','parser.py',202),
  ('select -> SELECT columns FROM ID WHERE logical_not_expression SEMI','select',7,'p_select','parser.py',260),
  ('columns -> columns COMMA column','columns',3,'p_columns','parser.py',270),
  ('columns -> column','columns',1,'p_columns','parser.py',271),
  ('column -> MAX LPAREN ID RPAREN','column',4,'p_column','parser.py',284),
  ('column -> COUNT LPAREN ID RPAREN','column',4,'p_column','parser.py',285),
  ('column -> SUM LPAREN ID RPAREN','column',4,'p_column','parser.py',286),
  ('column -> ID','column',1,'p_column','parser.py',287),
  ('column -> MAX LPAREN ID RPAREN AS ID','column',6,'p_column','parser.py',288),
  ('column -> COUNT LPAREN ID RPAREN AS ID','column',6,'p_column','parser.py',289),
  ('column -> SUM LPAREN ID RPAREN AS ID','column',6,'p_column','parser.py',290),
  ('column -> ID AS ID','column',3,'p_column','parser.py',291),
  ('logical_not_expression -> logical_or_expression','logical_not_expression',1,'p_logical_not_expression_1','parser.py',304),
  ('logical_not_expression -> NOT logical_not_expression','logical_not_expression',2,'p_logical_not_expression_2','parser.py',308),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression_1','parser.py',314),
  ('logical_or_expression -> logical_or_expression OR logical_and_expression','logical_or_expression',3,'p_logical_or_expression_2','parser.py',319),
  ('logical_and_expression -> equality_expression','logical_and_expression',1,'p_logical_and_expression_1','parser.py',326),
  ('logical_and_expression -> logical_and_expression AND equality_expression','logical_and_expression',3,'p_logical_and_expression_2','parser.py',331),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression_1','parser.py',338),
  ('equality_expression -> equality_expression EQ relational_expression','equality_expression',3,'p_equality_expression_2','parser.py',343),
  ('equality_expression -> equality_expression EQUALS relational_expression','equality_expression',3,'p_equality_expression_2','parser.py',344),
  ('equality_expression -> equality_expression NE relational_expression','equality_expression',3,'p_equality_expression_3','parser.py',349),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression_1','parser.py',355),
  ('relational_expression -> relational_expression LT additive_expression','relational_expression',3,'p_relational_expression_2','parser.py',360),
  ('relational_expression -> relational_expression GT additive_expression','relational_expression',3,'p_relational_expression_3','parser.py',365),
  ('relational_expression -> relational_expression LE additive_expression','relational_expression',3,'p_relational_expression_4','parser.py',370),
  ('relational_expression -> relational_expression GE additive_expression','relational_expression',3,'p_relational_expression_5','parser.py',375),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression_1','parser.py',382),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression_2','parser.py',387),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression_3','parser.py',392),
  ('multiplicative_expression -> val','multiplicative_expression',1,'p_multiplicative_expression_1','parser.py',399),
  ('multiplicative_expression -> multiplicative_expression TIMES val','multiplicative_expression',3,'p_multiplicative_expression_2','parser.py',404),
  ('multiplicative_expression -> multiplicative_expression DIVIDE val','multiplicative_expression',3,'p_multiplicative_expression_3','parser.py',409),
  ('multiplicative_expression -> multiplicative_expression MOD val','multiplicative_expression',3,'p_multiplicative_expression_4','parser.py',414),
  ('val -> ID','val',1,'p_val','parser.py',419),
  ('val -> ICONST','val',1,'p_val','parser.py',420),
  ('val -> FCONST','val',1,'p_val','parser.py',421),
  ('val -> SCONST','val',1,'p_val','parser.py',422),
  ('exit -> EXIT LPAREN RPAREN','exit',3,'p_exit','parser.py',426),
  ('exit -> QUIT LPAREN RPAREN','exit',3,'p_exit','parser.py',427),
  ('exit -> EXIT LPAREN RPAREN SEMI','exit',4,'p_exit','parser.py',428),
  ('exit -> QUIT LPAREN RPAREN SEMI','exit',4,'p_exit','parser.py',429),
]
